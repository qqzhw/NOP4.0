@model DashboardModel
@inject IPermissionService permissionService
@using Nop.Services.Security
@{
    Html.AppendCssFileParts("~/lib/ionicons/css/ionicons-2.0.1.min.css");

    //page title
    ViewBag.Title = T("Admin.Dashboard").Text; 
    
    var canManageCustomers = permissionService.Authorize(StandardPermissionProvider.ManageCustomers);
    var canManageProducts = permissionService.Authorize(StandardPermissionProvider.ManageProducts);
    var canManageReturnRequests = permissionService.Authorize(StandardPermissionProvider.ManageReturnRequests);
}
<nop-antiforgery-token />
<div class="content-header">
    <h1>
        @T("Admin.Dashboard")
    </h1>
</div>
<div class="content">
    <div class="row">
        <div class="col-md-12">
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_top" })
           
                <div class="row">
                    <div class="col-md-12">
                        @await Component.InvokeAsync("NopCommerceNews")
                    </div>
                </div>
            
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_news_after" })
           
                <div class="row">
                    <div class="col-md-12">
                      
                    </div>
                </div>
            
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_commonstatistics_after" })
           
                <div class="row">
                    
                        <div class="col-md-6">
                         
                        </div>
                 
                        <div class="col-md-6">
                          
                        </div>
                   
                </div>
         
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_customerordercharts_after" })
            
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_orderreports_after" })
          
                <div class="row">
                  
                    <div class="col-md-4">
                       
                    </div>
                </div>
          
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_latestorders_searchterms_after" })
           
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_dashboard_bottom" })
        </div>
    </div>
</div>
